# regex_utils.py
import re
from .database_utils import log_to_database
from datetime import datetime

def extract_boucle_num(subject):
    """
    Extraire le numéro de boucle du sujet de l'e-mail.

    :param subject (str): Sujet de l'e-mail.
    :return (str or None): Numéro de boucle extrait ou None s'il n'est pas trouvé.
    """
    match = re.search(r'[Cc]onvention N°(\w+)', subject) # Recherche le motif 'Convention N°' suivi du numéro
    if match:
        return match.group(1) # Renvoie le groupe de capture correspondant au numéro de boucle
    else:
        print("Impossible d'extraire le numéro de boucle de l'objet du mail")
        return None # Aucune correspondance trouvée, renvoie None

def extract_dates(subject, num_boucle):
    """
    Extraire les dates du sujet de l'e-mail.

    :param subject (str): Sujet de l'e-mail.
    :param num_boucle (int): Numéro de la boucle d'autoconsommation.
    :return (tuple): Un tuple contenant les dates de début et de fin extraites (ou None si aucune date n'est trouvée).
    """
    match = re.search(r'Période du « (\d{2}/\d{2}/\d{4}) » au « (\d{2}/\d{2}/\d{4}) »', subject)
    if match:
        return match.group(1), match.group(2) # Renvoie les deux groupes de capture correspondant aux dates de début et de fin
    else:
        log_to_database(num_boucle, "", datetime.now(), "", "Impossible d'extraire les dates de l'objet du mail", 2, "ERROR")
        return None, None # Aucune correspondance trouvée, renvoie None pour les deux dates

def extract_password(email_content, num_boucle, periode):
    """
    Extraire le mot de passe du contenu de l'e-mail.
    :param email_content (str): Contenu de l'e-mail.
    :param num_boucle (int): Numéro de la boucle d'autoconsommation.
    :param periode (str): Période (dateDebut_dateFin).
    :return (str or None): Mot de passe extrait ou None s'il n'est pas trouvé.
    """
    # Motif pour correspondre à une chaîne de 12 ou 14 caractères
    password_pattern = re.compile(r'(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*()_+\-={}[\]|\\:;"\'<>,.?/~`])[A-Za-z0-9!@#$%^&*()_+\-={}[\]|\\:;"\'<>,.?/~`]{12,14}')
    
    match = password_pattern.search(email_content)
    if match:
        password = match.group(0)
        # Enlever les astérisques au début et à la fin s'ils existent
        if password.startswith('*') and password.endswith('*'):
            password = password[1:-1]
        return password
    else:
        log_to_database(num_boucle, periode, datetime.now(), "", "Impossible d'extraire le mot de passe du corps du mail", 2, "ERROR")
        return None
        

def extract_prm(file_name, num_boucle, periode):
    """
    Extraire le PRM du nom de fichier.

    :param file_name (str): Nom de fichier.
    :param num_boucle (int): Numéro de la boucle d'autoconsommation.
    :param periode (str): Période (dateDebut_dateFin).
    :return (str or None): PRM extrait ou None s'il n'est pas trouvé.
    """
    match = re.match(r'^[^_]*[0-9]', file_name)
    if match:
        return match.group(0) # Renvoie la partie du nom de fichier avant le premier underscore
    else:
        log_to_database(num_boucle, periode, datetime.now(), f"{file_name}", "Impossible d'extraire le PRM du nom du fichier", 2, "ERROR")
        return None # Aucune correspondance trouvée, renvoie None


def extract_attribut(file_name, num_boucle, periode):
    """
    Extraire l'attribut du nom de fichier.

    :param file_name (str): Nom de fichier.
    :param num_boucle (int): Numéro de la boucle d'autoconsommation.
    :param periode (str): Période (dateDebut_dateFin).
    :return (str or None): Attribut extrait ou None s'il n'est pas trouvé.
    """
    match = re.search(r'_(.*?)_CDC', file_name) # Recherche du motif entre deux underscores suivis de '_CDC'
    if match:
        match = match.group(1).split("_") # Extraire le dernier élément après le dernier underscore
        return match[2]
    else:
        log_to_database(num_boucle, periode, datetime.now(), f"{file_name}", "Impossible d'extraire l'attribut du nom du fichier", 2, "ERROR")
        return None