import sys
import os
from utils.config_utils import read_config
from utils.file_utils import get_first_zip_file, delete_directory
from utils.email_utils import send_email
from utils.database_utils import log_to_database, delete_old_logs
from datetime import datetime


def main():
    """
    Fonction principale du programme d'envoi d'e-mail avec un fichier journal et un fichier ZIP.

    Cette fonction effectue les étapes suivantes :
    1. Vérifie que le nombre d'arguments fournis en ligne de commande est correct. Si ce n'est pas le cas, affiche un
       message d'utilisation et quitte le programme.
    2. Récupère les arguments de la ligne de commande (répertoire, adresse e-mail, mot de passe e-mail, objet de l'e-mail).
    3. Vérifie si le répertoire spécifié existe.
    4. Lit les paramètres de configuration depuis le fichier 'main_config.ini' en appelant la fonction `read_config`.
    5. Configure les paramètres d'envoi de l'e-mail (adresse d'expédition, adresse de réception, nom d'utilisateur SMTP,
       mot de passe SMTP, serveur SMTP) en utilisant les paramètres de configuration et les arguments de ligne de commande.
    6. Récupère le premier fichier ZIP dans le répertoire spécifié en appelant la fonction `get_first_zip_file`.
    7. Construit le chemin vers le fichier ZIP.
    8. Envoie l'e-mail avec le contenu du fichier journal et le fichier ZIP attaché en appelant la fonction `send_email`.
    9. Supprime le répertoire spécifié en appelant la fonction `delete_directory`.
    10. Supprime les lignes de log anciens de 3 moins ou plus dans la table 'Log' de la base de données.

    :return: None
    """
    # Vérifie que le nombre d'arguments fournis en ligne de commande est correct.
    if len(sys.argv) != 7:
        print("Utilisation : python3 script.py <repertoire> <mail> <mail_password> <subject> <num_boucle> <periode>")  # Ajout des arguments manquants
        sys.exit(1)

    # Récupère les arguments de la ligne de commande
    repertoire = sys.argv[1]
    mail = sys.argv[2]
    mail_password = sys.argv[3]
    subject = sys.argv[4]
    num_boucle = sys.argv[5]
    periode = sys.argv[6]
    
    rep = repertoire.split("_")
    if len(rep) != 4 : # Dans le cas où l'on ne fait pas du rattrapage
        # Vérifier si le répertoire existe
        if not os.path.isdir(repertoire):
            print(f"Le répertoire {repertoire} n'existe pas.")
            sys.exit(1)
    
    # Lire les paramètres de configuration depuis config.ini
    config = read_config('/home/ubuntu/CEpublicationEXPL/config/main_config.ini')
    
    # Configuration des paramètres d'envoi de l'e-mail
    sender_email = mail
    receiver_email = mail
    smtp_username = mail
    smtp_password = mail_password
    smtp_server = config.get('SMTP', 'server')
    
    if len(rep) != 4 : # Dans le cas où l'on ne fait pas du rattrapage
        # Récupère le premier sous-répertoire zippé dans le répertoire spécifié
        dossier = get_first_zip_file(repertoire)
        if dossier is None:
            log_to_database(num_boucle, periode, datetime.now(), "", f"Aucun sous-répertoire trouvé dans {repertoire}", 2, "ERROR")
            sys.exit(1)
        # Construit le chemin vers le dossier zippé
        zip_file_path  = os.path.join(repertoire, dossier)
    else :
        zip_file_path = repertoire + ".zip"
    
    # Envoyer l'e-mail avec le contenu du fichier journal
    send_email(smtp_server, smtp_username, smtp_password, sender_email, receiver_email, subject, num_boucle, periode, zip_file_path)
    
    if len(rep) != 4 : # Dans le cas où l'on ne fait pas du rattrapage
        # Supprimer le répertoire
        delete_directory(repertoire, num_boucle, periode)
    else:
        # Supprime le fichier zip après extraction
        if os.path.exists(zip_file_path):
            os.remove(zip_file_path)
            log_to_database(num_boucle, periode, datetime.now(), f"{zip_file_path}", "Dossier zippé supprimé avec succès.", 1, "INFO")
    
    delete_old_logs(num_boucle, periode)
    